<?xml version="1.0"?>
<robot name="quadrotor" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/quadrotor</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <!-- IMU Sensor -->
  <gazebo reference="imu_link">
    <sensor type="imu" name="imu_sensor">
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <visualize>false</visualize>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
        <topicName>quadrotor/imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Bottom Camera -->
  <gazebo reference="bottom_camera_link">
    <sensor type="camera" name="bottom_camera">
      <update_rate>30.0</update_rate>
      <camera name="bottom_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>bottom_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>bottom_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- GPS Sensor -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
      <always_on>true</always_on>
      <update_rate>10.0</update_rate>
      <plugin name="gps_plugin" filename="libgazebo_ros_gps.so">
        <robotNamespace>/quadrotor</robotNamespace>
        <topicName>gps</topicName>
        <frameName>gps_link</frameName>
        <updateRate>10.0</updateRate>
        <gaussianNoise>0.0</gaussianNoise>
        <velocityGaussianNoise>0.0</velocityGaussianNoise>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Odometry Plugin -->
  <gazebo>
    <plugin name="quadrotor_groundtruth" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>quadrotor/ground_truth</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>world</frameName>
    </plugin>
  </gazebo>

  <!-- Visual appearance -->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <!-- Arms -->
  <gazebo reference="front_right_arm_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <gazebo reference="front_left_arm_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <gazebo reference="back_right_arm_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <gazebo reference="back_left_arm_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <!-- Motors -->
  <gazebo reference="front_right_motor_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="front_left_motor_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="back_right_motor_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="back_left_motor_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- Propellers -->
  <gazebo reference="front_right_rotor_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="front_left_rotor_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="back_right_rotor_link">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="back_left_rotor_link">
    <material>Gazebo/Green</material>
  </gazebo>

  <!-- Landing gear - Black -->
  <gazebo reference="front_right_leg_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="front_left_leg_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="back_right_leg_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="back_left_leg_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- Camera -->
  <gazebo reference="bottom_camera_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- IMU -->
  <gazebo reference="imu_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- GPS -->
  <gazebo reference="gps_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Quadrotor Plugin (handles physics) -->
  <gazebo>
    <plugin name="simple_quadrotor_dynamics" filename="libgazebo_ros_force.so">
      <robotNamespace>/quadrotor</robotNamespace>
      <bodyName>base_link</bodyName>
      <topicName>cmd_force</topicName>
    </plugin>
  </gazebo>

  <!-- Quadrotor Motor Plugin -->
  <gazebo>
    <plugin name="quadrotor_motor_plugin" filename="libquadrotor_motor_plugin.so">
      <robotNamespace>/quadrotor</robotNamespace>
    </plugin>
  </gazebo>
</robot>